[{"C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\index.js":"1","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\App.js":"3","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\frontpage.js":"4","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\queries.js":"5","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\searchDropDown.js":"6","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\schoolFrontPage.js":"7","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\ListingTable.js":"8","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\UserWindow.js":"9","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\LoginForm.js":"10","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\NewListingsForm.js":"11"},{"size":1146,"mtime":1610102214023,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":966,"mtime":1610101793727,"results":"15","hashOfConfig":"13"},{"size":312,"mtime":1608063069589,"results":"16","hashOfConfig":"13"},{"size":1796,"mtime":1609335409375,"results":"17","hashOfConfig":"13"},{"size":858,"mtime":1608056048788,"results":"18","hashOfConfig":"13"},{"size":2259,"mtime":1610101047993,"results":"19","hashOfConfig":"13"},{"size":3844,"mtime":1608120201544,"results":"20","hashOfConfig":"13"},{"size":1385,"mtime":1608117987190,"results":"21","hashOfConfig":"13"},{"size":1368,"mtime":1608191799115,"results":"22","hashOfConfig":"13"},{"size":3193,"mtime":1609335927870,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jogd51",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},"C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\index.js",[],"C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\App.js",[],"C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\frontpage.js",[],["51","52"],"C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\queries.js",[],"C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\searchDropDown.js",["53"],"import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nconst SearchDropDown = ({ options, onChangeFunction }) => {\r\n  const [value, setValue] = useState('')\r\n  \r\n  return (\r\n    <div className='search-box'>\r\n      <div>\r\n        <Autocomplete\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue)\r\n            onChangeFunction(newValue)\r\n          }}\r\n          options={options}\r\n          getOptionLabel={(option) => option.name}\r\n          margin='normal'\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label='Etsi ja valitse koulu'\r\n              variant='outlined'\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchDropDown\r\n","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\schoolFrontPage.js",["54","55","56","57"],"C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\ListingTable.js",[],"C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\UserWindow.js",["58"],"import {\r\n  Container,\r\n  Paper,\r\n  Grid,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TableContainer,\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\nimport LoginForm from './LoginForm.js'\r\nimport FaceOutlinedIcon from '@material-ui/icons/FaceOutlined'\r\n\r\nconst UserWindow = ({ token, user }) => {\r\n  if (!token) {\r\n    return (\r\n      <Container component={Paper}>\r\n        <LoginForm />\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container component={Paper} align='center'>\r\n      <Grid container justify='center'>\r\n        <FaceOutlinedIcon fontSize='large' />\r\n        <TableContainer>\r\n          <Table size='small'>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell align='center'> {user.name} </TableCell>\r\n                <TableCell align='center'> {user.username}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell align='center'>{user.phonenumber}</TableCell>\r\n                <TableCell align='center'>{user.email}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <button\r\n        onClick={() => {\r\n          localStorage.removeItem('KirjaKirppis-user-token')\r\n        }}\r\n      >\r\n        kirjaudu ulos\r\n      </button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserWindow\r\n","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\LoginForm.js",["59","60"],"import { Button, Grid, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN } from './queries'\r\n\r\nconst LoginForm = () => {\r\n  const [login, { result }] = useMutation(LOGIN)\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    const username = event.target.username.value\r\n    const password = event.target.password.value\r\n    const data = await login({\r\n      variables: {\r\n        username,\r\n        password,\r\n      },\r\n    })\r\n    if (data.error) {\r\n      console.log(data.error)\r\n    }\r\n\r\n    if (data.data.login) {\r\n      const { token, username, id } = data.data.login\r\n      console.log(username, id)\r\n      localStorage.setItem('KirjaKirppis-user-token', token)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Grid container justify='center' direction='column'>\r\n        <TextField id='username' label='Käyttäjänimi' variant='outlined' style={{ padding: 2 }}/>\r\n        <TextField\r\n          id='password'\r\n          label='Salasana'\r\n          variant='outlined'\r\n          type='password'\r\n          style={{ padding: 2 }}\r\n        />\r\n        <Button type='submit' style={{ padding: 2 }} variant='outlined'>\r\n          Kirjaudu sisään\r\n        </Button>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","C:\\Users\\ratya\\Documents\\GitHub\\KirjaKirppis\\kirjakirppis\\frontend\\src\\components\\NewListingsForm.js",["61"],"import { useMutation } from '@apollo/client'\r\nimport {\r\n  Container,\r\n  Grid,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { useState } from 'react'\r\nimport books from '../assets/books.json'\r\nimport { CREATE_LISTING } from './queries'\r\n\r\nconst NewListingForm = ({ user }) => {\r\n  const [createListing, result] = useMutation(CREATE_LISTING)\r\n  const [condition, setCondition] = useState('')\r\n  const [book, setBook] = useState({})\r\n  const [information, setInformation] = useState('')\r\n  const [price, setPrice] = useState('')\r\n\r\n  const submit = async (event) => {\r\n    event.preventDefault()\r\n    const newListing = {\r\n      ...book,\r\n      price: parseInt(price),\r\n      condition: condition,\r\n      information: information,\r\n      user: user.id,\r\n      school: user.school\r\n    }\r\n    console.log(newListing)\r\n    const data = await createListing({ variables: { ...newListing } })\r\n    if(data.data.createListing){\r\n      console.log(data.data)\r\n    }\r\n  }\r\n\r\n  if (!user)\r\n    return (\r\n      <Container component={Paper}>\r\n        <Typography variant='subtitle1'>\r\n          Kirjaudu sisään luodaksesi ilmoituksia\r\n        </Typography>\r\n      </Container>\r\n    )\r\n  return (\r\n    <Container component={Paper}>\r\n      <Typography variant='h6'>Luo uusi listaus</Typography>\r\n      <form onSubmit={submit}>\r\n        <Grid container justify='center' direction='column' spacing={1}>\r\n          <Grid item>\r\n            <Autocomplete\r\n              onChange={(event, newValue) => {\r\n                setBook(newValue)\r\n              }}\r\n              options={books}\r\n              getOptionLabel={(option) => option.title}\r\n              margin='normal'\r\n              id='kirja'\r\n              renderInput={(params) => (\r\n                <TextField {...params} label='Valitse kirja' />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              type='number'\r\n              id='hinta'\r\n              label='Hinta'\r\n              onChange={(event) => setPrice(event.target.value)}\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position='end'>€</InputAdornment>,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id='informaatio'\r\n              label='Lisätietoa kirjasta'\r\n              value={information}\r\n              onChange={(event) => setInformation(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Select\r\n              id='kunto'\r\n              value={condition}\r\n              onChange={(event) => setCondition(event.target.value)}\r\n            >\r\n              <MenuItem value={0}>Hyvä</MenuItem>\r\n              <MenuItem value={1}>Ihan ok</MenuItem>\r\n              <MenuItem value={2}>Huono</MenuItem>\r\n            </Select>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button type='submit'> uusi listaus</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NewListingForm\r\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":15},{"ruleId":"66","severity":1,"message":"70","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"71","line":1,"column":28,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"72","line":4,"column":28,"nodeType":"68","messageId":"69","endLine":4,"endColumn":31},{"ruleId":"66","severity":1,"message":"73","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":15},{"ruleId":"66","severity":1,"message":"74","line":6,"column":3,"nodeType":"68","messageId":"69","endLine":6,"endColumn":12},{"ruleId":"66","severity":1,"message":"75","line":1,"column":35,"nodeType":"68","messageId":"69","endLine":1,"endColumn":45},{"ruleId":"66","severity":1,"message":"76","line":7,"column":19,"nodeType":"68","messageId":"69","endLine":7,"endColumn":25},{"ruleId":"66","severity":1,"message":"76","line":19,"column":25,"nodeType":"68","messageId":"69","endLine":19,"endColumn":31},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'TableHead' is defined but never used.","'Typography' is defined but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]